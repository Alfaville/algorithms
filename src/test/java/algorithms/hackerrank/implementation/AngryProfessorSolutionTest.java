package algorithms.hackerrank.implementation;

import org.junit.jupiter.api.*;

import static org.junit.jupiter.api.Assertions.assertEquals;

@DisplayName("Angry Professor")
@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
public class AngryProfessorSolutionTest {

    @Test
    @Order(0)
    public void testAngryProfessorSucessYES_1() {
        assertEquals(
                "YES",
                new AngryProfessorSolution().angryProfessor(3, new int[] {-1, -3, 4, 2})
        );
    }

    @Test
    @Order(1)
    public void testAngryProfessorSucessNO_2() {
        assertEquals(
                "NO",
                new AngryProfessorSolution().angryProfessor(2, new int[] {0, -1, 2, 1})
        );
    }

    @Test
    @Order(2)
    public void testAngryProfessorSucessYES_3() {
        int[] a =  {0, 10, -1, 5, 19, 1, -9999, 1, -1, 2, 1};
        assertEquals(
                "YES",
                new AngryProfessorSolution().angryProfessor(7, a)
        );
    }

    @Test
    @Order(3)
//    @Timeout(value = 10, unit = TimeUnit.MILLISECONDS)
    @DisplayName("Test with many values")
    public void testAngryProfessorSucessYES_4() {
        int[] a =  {
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
                -1, 10, -5, -3, -100, 100, -2, 5, 99, 18
        };

        assertEquals(
                "YES",
                new AngryProfessorSolution().angryProfessor(500, a)
        );
    }

}

